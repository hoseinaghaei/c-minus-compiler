1.	(KEYWORD, int) (ID, count) (NUM, 1000) (SYMBOL, ;) 
2.	(KEYWORD, int) (ID, result) (SYMBOL, [) (NUM, 10) (SYMBOL, ]) (SYMBOL, ;) 
3.	(KEYWORD, int) (ID, Array) (SYMBOL, [) (NUM, 100) (SYMBOL, ]) (SYMBOL, ;) 
4.	(KEYWORD, int) (ID, Array2) (SYMBOL, [) (ID, count) (SYMBOL, ]) (SYMBOL, ;) 
5.	(KEYWORD, int) (ID, newArray) (SYMBOL, [) (ID, count) (SYMBOL, *) (NUM, 10) (SYMBOL, ]) (SYMBOL, ;) 
7.	(KEYWORD, int) (ID, f) (SYMBOL, () (KEYWORD, int) (ID, i) (SYMBOL, ,) (KEYWORD, int) (ID, result) (SYMBOL, ,) (KEYWORD, int) (ID, a) (SYMBOL, )) (SYMBOL, {) 
8.	(ID, count) (SYMBOL, =) (ID, count) (SYMBOL, -) (NUM, 1) (SYMBOL, ;) 
9.	(KEYWORD, if) (SYMBOL, () (ID, result) (SYMBOL, [) (ID, i) (SYMBOL, ]) (SYMBOL, ==) (NUM, 0) (SYMBOL, )) (SYMBOL, {) 
10.	(KEYWORD, return) (ID, result) (SYMBOL, [) (ID, i) (SYMBOL, ]) (SYMBOL, *) (NUM, 5) (SYMBOL, ;) 
11.	(SYMBOL, }) (KEYWORD, else) (KEYWORD, if) (SYMBOL, () (ID, Array) (SYMBOL, [) (ID, i) (SYMBOL, ]) (SYMBOL, ==) (ID, result) (SYMBOL, [) (ID, i) (SYMBOL, *) (NUM, 2) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, {) 
12.	(KEYWORD, if) (SYMBOL, () (ID, i) (SYMBOL, ==) (NUM, 10) (SYMBOL, )) (SYMBOL, {) 
13.	(ID, result) (SYMBOL, [) (ID, i) (SYMBOL, ]) (SYMBOL, =) (ID, result) (SYMBOL, [) (ID, i) (SYMBOL, ]) (SYMBOL, <) (ID, i) (SYMBOL, ;) 
14.	(KEYWORD, return) (NUM, 0) (SYMBOL, ;) 
15.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {) 
16.	(ID, result) (SYMBOL, [) (ID, i) (SYMBOL, ]) (SYMBOL, =) (ID, f) (SYMBOL, () (ID, i) (SYMBOL, -) (NUM, 2) (SYMBOL, ,) (ID, result) (SYMBOL, ,) (ID, a) (SYMBOL, )) (SYMBOL, *) (ID, f) (SYMBOL, () (NUM, 2) (SYMBOL, *) (ID, i) (SYMBOL, ,) (ID, result) (SYMBOL, ,) (ID, a) (SYMBOL, )) (SYMBOL, ;) 
17.	(KEYWORD, return) (ID, result) (SYMBOL, [) (ID, i) (SYMBOL, +) (NUM, 1) (SYMBOL, ]) (SYMBOL, ;) 
18.	(SYMBOL, }) 
19.	(KEYWORD, endif) 
20.	(SYMBOL, }) 
21.	(KEYWORD, else) (SYMBOL, {) 
22.	(KEYWORD, int) (ID, temp) (SYMBOL, =) (ID, count) (SYMBOL, +) (NUM, 1) (SYMBOL, ;) 
23.	(KEYWORD, if) (SYMBOL, () (ID, temp) (SYMBOL, <) (ID, newArray) (SYMBOL, [) (ID, a) (SYMBOL, ]) (SYMBOL, +) (ID, newArray) (SYMBOL, [) (ID, result) (SYMBOL, [) (ID, a) (SYMBOL, -) (ID, Array2) (SYMBOL, [) (ID, result) (SYMBOL, [) (ID, a) (SYMBOL, +) (NUM, 5) (SYMBOL, ]) (SYMBOL, ]) (SYMBOL, ]) (SYMBOL, ]) (SYMBOL, )) 
24.	(ID, f) (SYMBOL, () (ID, result) (SYMBOL, [) (ID, a) (SYMBOL, +) (ID, i) (SYMBOL, ]) (SYMBOL, ,) (ID, result) (SYMBOL, ,) (NUM, 2) (SYMBOL, *) (ID, a) (SYMBOL, )) (SYMBOL, ;) 
25.	(KEYWORD, else) 
26.	(KEYWORD, return) (NUM, 10) (SYMBOL, +) (ID, a) (SYMBOL, *) (ID, reult) (SYMBOL, [) (ID, f) (SYMBOL, () (ID, result) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (SYMBOL, ,) (ID, result) (SYMBOL, ,) (ID, i) (SYMBOL, *) (ID, a) (SYMBOL, )) (SYMBOL, ;) (SYMBOL, ]) (SYMBOL, ;) 
27.	(KEYWORD, endif) 
28.	(SYMBOL, }) 
29.	(KEYWORD, endif) 
30.	(SYMBOL, }) 
32.	(KEYWORD, void) (ID, main) (SYMBOL, () (SYMBOL, )) (SYMBOL, {) 
33.	(KEYWORD, int) (ID, i) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
34.	(ID, f) (SYMBOL, () (NUM, 10) (SYMBOL, )) (SYMBOL, ;) (ID, f) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
35.	(KEYWORD, int) (ID, a) (SYMBOL, =) (ID, f) (SYMBOL, () (ID, f) (SYMBOL, () (ID, x) (SYMBOL, )) (SYMBOL, )) (SYMBOL, *) (ID, g) (SYMBOL, () (ID, f) (SYMBOL, () (ID, x) (SYMBOL, )) (SYMBOL, )) (SYMBOL, +) (ID, f) (SYMBOL, () (ID, g) (SYMBOL, () (ID, y) (SYMBOL, )) (SYMBOL, )) (SYMBOL, ;) 
37.	(KEYWORD, for) (SYMBOL, () (KEYWORD, int) (ID, i) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) (ID, i) (SYMBOL, <) (NUM, 10) (SYMBOL, ;) (ID, i) (SYMBOL, =) (ID, i) (SYMBOL, +) (NUM, 1) (SYMBOL, )) 
38.	(ID, result) (SYMBOL, [) (ID, i) (SYMBOL, ]) (SYMBOL, =) (ID, i) 
40.	(ID, count) (SYMBOL, =) (NUM, 100) (SYMBOL, ;) 
41.	(ID, output) (SYMBOL, () (ID, f) (SYMBOL, () (NUM, 40) (SYMBOL, ,) (ID, result) (SYMBOL, )) (SYMBOL, )) (SYMBOL, ;) 
42.	(SYMBOL, ;) 
43.	(ID, Wrong) (ID, Comment) 
44.	(SYMBOL, }) 
