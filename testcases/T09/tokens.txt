1.	(KEYWORD, int) (ID, a) (SYMBOL, ;) 
2.	(KEYWORD, int) (ID, func) (SYMBOL, () (KEYWORD, int) (ID, b) (SYMBOL, ,) (KEYWORD, int) (ID, ccc) (SYMBOL, )) (SYMBOL, {) 
3.	(KEYWORD, int) (ID, f) (SYMBOL, ;) 
4.	(KEYWORD, void) (ID, func2) (SYMBOL, () (KEYWORD, int) (ID, k) (SYMBOL, )) (SYMBOL, {) 
5.	(KEYWORD, return) (ID, k) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (SYMBOL, +) (ID, k) (SYMBOL, [) (NUM, 1) (SYMBOL, ]) (SYMBOL, *) (NUM, 87) (SYMBOL, ;) 
6.	(SYMBOL, }) 
7.	(KEYWORD, int) (ID, f) (SYMBOL, [) (NUM, 2) (SYMBOL, ]) (SYMBOL, =) (NUM, 5) (SYMBOL, ;) 
8.	(ID, f) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (SYMBOL, =) (ID, ccc) (SYMBOL, ;) 
9.	(ID, fff) (SYMBOL, [) (NUM, 1) (SYMBOL, ]) (SYMBOL, =) (NUM, 7) (SYMBOL, +) (NUM, 1) (SYMBOL, ;) 
10.	(ID, f) (SYMBOL, =) (ID, func2) (SYMBOL, () (ID, func) (SYMBOL, () (NUM, 1) (SYMBOL, ,) (NUM, 4) (SYMBOL, )) (SYMBOL, )) (SYMBOL, ;) 
11.	(ID, b) (SYMBOL, =) (SYMBOL, ;) 
12.	(KEYWORD, for) (SYMBOL, () (KEYWORD, int) (ID, jk) (SYMBOL, =) (NUM, 10) (SYMBOL, ;) (ID, d) (SYMBOL, <) (NUM, 0) (SYMBOL, ;) (ID, d) (SYMBOL, =) (ID, d) (SYMBOL, -) (NUM, 1) (SYMBOL, )) (SYMBOL, {) (KEYWORD, int) (ID, m) (SYMBOL, =) (ID, f) (SYMBOL, [) (NUM, 1) (SYMBOL, ]) (SYMBOL, +) (ID, b) (SYMBOL, ;) 
13.	(KEYWORD, if) (SYMBOL, () (ID, d) (SYMBOL, ==) (SYMBOL, )) 
14.	(KEYWORD, break) (SYMBOL, ;) 
15.	(KEYWORD, else) (ID, d) (SYMBOL, ==) (NUM, 1) (SYMBOL, ;) (SYMBOL, }) 
17.	(KEYWORD, return) (ID, f) (SYMBOL, [) (ID, b) (SYMBOL, ]) (SYMBOL, +) (ID, b) (SYMBOL, ;) 
18.	(SYMBOL, }) 
19.	(KEYWORD, int) (ID, a) (SYMBOL, =) (SYMBOL, ;) 
20.	(KEYWORD, int) (ID, arr) (SYMBOL, [) (ID, a) (SYMBOL, ]) (SYMBOL, ;) 
21.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {) 
22.	(KEYWORD, int) (ID, a) (SYMBOL, ;) 
23.	(ID, a) (SYMBOL, =) (SYMBOL, -) (NUM, 3) (SYMBOL, +) (SYMBOL, +) (NUM, 11) (SYMBOL, ;) 
24.	(ID, a) (SYMBOL, +) (ID, a) (SYMBOL, ;) 
25.	(ID, b) (SYMBOL, =) (NUM, 5) (SYMBOL, *) (ID, a) (SYMBOL, +) (ID, foo) (SYMBOL, () (ID, a) (SYMBOL, ,) (ID, a) (SYMBOL, )) (SYMBOL, ;) 
26.	(ID, arr) (SYMBOL, [) (NUM, 1) (SYMBOL, ]) (SYMBOL, =) (ID, b) (SYMBOL, +) (SYMBOL, -) (NUM, 3) (SYMBOL, ;) 
27.	(ID, arr) (SYMBOL, [) (NUM, 2) (SYMBOL, ]) (SYMBOL, =) (ID, foo) (SYMBOL, () (ID, arr) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (SYMBOL, ,) (ID, arr) (SYMBOL, [) (NUM, 1) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;) 
28.	(KEYWORD, if) (SYMBOL, () (ID, b) (SYMBOL, ==) (NUM, 3) (SYMBOL, )) (SYMBOL, {) 
29.	(ID, arr) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (SYMBOL, =) (SYMBOL, -) (NUM, 7) (SYMBOL, ;) 
30.	(SYMBOL, }) 
31.	(KEYWORD, else) 
32.	(SYMBOL, {) 
33.	(KEYWORD, return) (ID, func) (SYMBOL, () (ID, arr) (SYMBOL, [) (NUM, 2) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;) 
34.	(SYMBOL, }) 
35.	(KEYWORD, return) (ID, main) (SYMBOL, ;) 
36.	(SYMBOL, }) 
38.	(KEYWORD, int) (ID, foo) (SYMBOL, () (KEYWORD, int) (ID, d) (SYMBOL, ,) (KEYWORD, int) (ID, e) (SYMBOL, )) (SYMBOL, {) 
39.	(KEYWORD, int) (ID, a) (SYMBOL, ;) 
40.	(ID, a) (SYMBOL, =) (NUM, 5) (SYMBOL, ;) 
41.	(KEYWORD, if) (SYMBOL, () (ID, a) (SYMBOL, ==) (NUM, 5) (SYMBOL, )) (ID, retrun) (ID, a) (SYMBOL, ;) (KEYWORD, else) (ID, a) (SYMBOL, =) (ID, a) (SYMBOL, +) (NUM, 1) (KEYWORD, endif) (SYMBOL, ;) 
42.	(SYMBOL, }) 
